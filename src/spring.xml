<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>
	<!-- 
		Bean Inheritance
		[
			creating one bean as abstract bean(by specifying the abstract attribute to true for the bean)
			other traingle beans will inherit from this 
		]
	 -->
	<bean id="parentTriangle" class="com.shashi.shapes.Triangle" abstract="true">
		<property name="points">
			<list>
				<ref bean="pointA"/>
			</list>
		</property>
	</bean>
	 
	 <!-- 
	 	Register customInit as Initialization Method for This Bean only
	 	Register customCleanUp as Destroy Method for This Bean only
	  -->
	<bean id="triangle1" class="com.shashi.shapes.Triangle" parent="parentTriangle" init-method="customInit" destroy-method="customCleanUp">
		<property name="points">
			<list>
				<!-- 
					default behaviour is to overwrite pointA reference of parentTriangle here
				 -->
				<ref bean="pointB"/>
				<ref bean="pointC"/>
			</list>
		</property>
	</bean>
	
	<bean id="triangle2" class="com.shashi.shapes.Triangle" parent="parentTriangle">
		<property name="points">
			<!-- 
				Merge=true - specifies that parentTriangle's List to be merged with this Bean's List, not overwrite it
			 -->
			<list merge="true">
				<ref bean="pointB"/>
				<ref bean="pointC"/>
			</list>
		</property>

	</bean>
	
	
	<!-- Can be referenced anywhere -->
	<bean id="pointA" class="com.shashi.shapes.point.Point">
		<property name="x" value="0"/>
		<property name="y" value="0"/>
	</bean>
	
	<bean id="pointB" class="com.shashi.shapes.point.Point">
		<property name="x" value="-20"/>
		<property name="y" value="0"/>
	</bean>
	<bean id="pointC" class="com.shashi.shapes.point.Point">
		<property name="x" value="0"/>
		<property name="y" value="20"/>
	</bean>
	
	<!-- ALIAS -->
	<alias name="triangle" alias="triangle-alias"/>
</beans>